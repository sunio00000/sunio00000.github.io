I"a <blockquote>
  <p>남들 다 쓴다는 고래 사용법.</p>
</blockquote>

<h2 id="tools">Tools</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Ubuntu 18.04</code>, <code class="language-plaintext highlighter-rouge">Docker</code>, <code class="language-plaintext highlighter-rouge">shell</code>, <code class="language-plaintext highlighter-rouge">FTP</code> etc…</li>
</ul>

<h2 id="1-prologue--issue">1. Prologue &amp; Issue</h2>
<hr />
<blockquote>
  <p>🙄 필자는 이에 대해 아는 것이 전무하므로, 내용 중 틀린 것이 있을 수 있으니 각오하고 읽어주길 바란다.</p>
</blockquote>

<p>나만의 무기를 만들기 위한 프로젝트를 진행하기 이전에 모두의 셋업의 sync를 맞추기 위해서 docker라는 가상환경을 사용하기로 결정했다.<br />
‘<code class="language-plaintext highlighter-rouge">image</code>가 뭐고 <code class="language-plaintext highlighter-rouge">container</code>가 뭐고, dockerhub는 뭐임 github 짭인가 엌ㅋㅋㅋ 등’ 자잘한 지식들을 쌓았고, 실전에 적용할 수 있도록 run, pull, start 등의 간단한 커맨드에 익숙해지는 시간도 가졌다.<br />
그런데, <code class="language-plaintext highlighter-rouge">ubuntu</code> (18.04버전) 위에서 서버를 돌리면서 프로젝트를 진행하는 모습을 상상해보니 어쨋던지 깃허브와 같은 <code class="language-plaintext highlighter-rouge">VCS</code>(Version Control System)을 이용하여야 함은 당연하고 코드를 도커위에서 수정을 해야할까 싶은데, 나는(다른 팀원들도 그럴거라 믿지만) <code class="language-plaintext highlighter-rouge">vim 포비아</code>가 있기 때문에 이를 해결하기 위해서 <code class="language-plaintext highlighter-rouge">vsc</code>에서 서버의 파일을 <code class="language-plaintext highlighter-rouge">FTP</code>를 통해 사용할 수 있도록 하는 노력을 아래에서 해볼 예쩡이다.</p>

<h2 id="2-일단-도커-container-접속하기">2. 일단 도커 container 접속하기</h2>
<hr />
<p>이 문제를 해결한 아주 간단한 Command <code class="language-plaintext highlighter-rouge">alias</code> 되시겠다.<br />
<code class="language-plaintext highlighter-rouge">alias</code>는 어떠한 명령어에 별칭(별명)을 지어주는 무언가(프로그램 인가?)이다.<br />
<a href="!https://sunio00000.github.io/til/2021/01/17/til.html">포스팅</a>(aws ec2 cli 적용하는 뭐 그런 이야기) 에 쓰여진 내용을 토대로 지름길을 돌아가는 불상사를 막아보자!</p>

<h2 id="3-on-command-line">3. On Command Line</h2>
<hr />
<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># powershell</span><span class="w">
</span><span class="nv">$profile</span><span class="w"> </span><span class="c"># bashrc와 equivalant한 powershell의 무언가의 위치를 찾는다.</span><span class="w">
</span><span class="kr">function</span><span class="w"> </span><span class="nf">awsbegin</span><span class="w"> </span><span class="n">aws</span><span class="w"> </span><span class="nx">ec2</span><span class="w"> </span><span class="nx">start-instances</span><span class="w"> </span><span class="nt">--instance-ids</span><span class="w"> </span><span class="p">{</span><span class="s1">'id'</span><span class="p">}</span><span class="w">
</span><span class="kr">function</span><span class="w"> </span><span class="nf">awsend</span><span class="w"> </span><span class="n">aws</span><span class="w"> </span><span class="nx">ec2</span><span class="w"> </span><span class="nx">stop-instances</span><span class="w"> </span><span class="nt">--instance-ids</span><span class="w"> </span><span class="p">{</span><span class="s1">'id'</span><span class="p">}</span><span class="w">
</span><span class="n">Set-Alias</span><span class="w"> </span><span class="nx">awsstart</span><span class="w"> </span><span class="nx">awsbegin</span><span class="w">
</span><span class="n">Set-Alias</span><span class="w"> </span><span class="nx">awsstop</span><span class="w"> </span><span class="nx">awsend</span><span class="w">
</span></code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">Windows Powershell</code>에서는 <code class="language-plaintext highlighter-rouge">bashrc</code>를 대신하는 <code class="language-plaintext highlighter-rouge">profile</code> 파일을 찾아 수정해야한다.<br />
<code class="language-plaintext highlighter-rouge">profile</code>의 내용은 powershell이 init되는 순간에 명령어를 모두 동작하는 것으로 생각된다.<br />
이를 통해, 명령어를 매번 입력하여 <code class="language-plaintext highlighter-rouge">Alias</code>를 등록해야하는 수고를 덜게 되었다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># bash shell</span>
vim ~/.bashrc
<span class="nb">alias </span><span class="nv">awsstart</span><span class="o">=</span>‘aws ec2 start-instances <span class="nt">--instance-ids</span> <span class="o">{</span><span class="s1">'id'</span><span class="o">}</span>’ 
<span class="nb">alias </span><span class="nv">awsstop</span><span class="o">=</span>‘aws ec2 stop-instances <span class="nt">--instance-ids</span> <span class="o">{</span><span class="s1">'id'</span> <span class="o">}</span><span class="s1">'
</span></code></pre></div></div>
<p>위는 AWS linux bash에서 <code class="language-plaintext highlighter-rouge">Alias</code>를 등록하는 과정이다.</p>

<h2 id="4-result">4. Result</h2>
<hr />
<ul>
  <li><code class="language-plaintext highlighter-rouge">awss</code> function을 생성합니다.</li>
</ul>
<p align="center"><img src="https://user-images.githubusercontent.com/26760693/105523995-6afa6c80-5d22-11eb-8e44-a5e1e9cd1c79.png" width="450" height="35" /></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">awsstart</code> 라는 별명에 <code class="language-plaintext highlighter-rouge">awss</code> function을 적용하도록 합니다.</li>
</ul>
<p align="center"><img src="https://user-images.githubusercontent.com/26760693/105523997-6b930300-5d22-11eb-959c-66e6bff485ae.png" width="450" height="35" /></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Get-Alias</code> command로 명령어 등록을 확인할 수 있습니다.</li>
</ul>
<p align="center"><img src="https://user-images.githubusercontent.com/26760693/105523998-6c2b9980-5d22-11eb-8369-f1fe3a8ea617.png" width="700" height="300" /></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">awsstart</code>를 실행해봅니다.</li>
</ul>
<p align="center"><img src="https://user-images.githubusercontent.com/26760693/105524000-6c2b9980-5d22-11eb-94cf-39696aa69ae2.png" width="500" height="300" /></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">$profile</code>을 통해 명령어가 매번 powershell을 부팅할 때, 적용되도록 합니다. (save)</li>
</ul>
<p align="center"><img src="https://user-images.githubusercontent.com/26760693/105566226-622f8800-5d6e-11eb-9aa1-342318ce0832.png" width="700" height="300" /></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">AWS EC2 Ubuntu</code> shell 상에서 <code class="language-plaintext highlighter-rouge">awsstop</code> 명령을 실행한 모습이다.</li>
</ul>
<p align="center"><img src="https://user-images.githubusercontent.com/26760693/105523990-69c93f80-5d22-11eb-9f30-0830a8aae2ad.png" width="600" height="400" /></p>

<h2 id="5-epilogue">5. Epilogue</h2>
<hr />
<p>기술은 써먹어야 의미가 있는거야.</p>

<h2 id="6-reference">6. Reference</h2>
<hr />
<p><a href="!https://www.yalco.kr/36_docker/">얄팍한 코딩사전 docker 명령어</a></p>

<p><a href="!http://labs.brandi.co.kr/2021/01/20/hwangsg.html">로컬 개발환경 도커 사용하기</a></p>

<p><a href="!https://changhoi.github.io/posts/docker/docker-development-env-(1)/">도커로 개발환경 구축하기</a></p>

<p><a href="!https://www.manualfactory.net/10964">Visual Studio Code / FTP(SFTP)로 원격 서버 접속하여 파일 수정하는 방법</a></p>
:ET