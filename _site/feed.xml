<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sunio Dev</title>
    <description>Make me better than i was before.</description>
    <link>https://sunio00000.github.io//</link>
    <atom:link href="https://sunio00000.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 17 Jan 2021 20:16:25 +0900</pubDate>
    <lastBuildDate>Sun, 17 Jan 2021 20:16:25 +0900</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>💻 AWS EC2 시작과 종료 CLI로 쉽게하기.</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;내 지갑에서 아마존이 돈을 가져갈 수도 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows 10&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ubuntu 18.04&lt;/code&gt; /
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AWS&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EC2&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IAM&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CLI&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-prologue--issue&quot;&gt;1. Prologue &amp;amp; Issue&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;아마존 EC2 클라우드 컴퓨터는 &lt;strong&gt;제한된 시간&lt;/strong&gt;(750 h/m, &lt;a href=&quot;!https://aws.amazon.com/ko/ec2/pricing/?trkCampaign=acq_paid_search_brand&amp;amp;sc_channel=PS&amp;amp;sc_campaign=acquisition_KR&amp;amp;sc_publisher=Google&amp;amp;sc_category=Cloud%20Computing&amp;amp;sc_country=KR&amp;amp;sc_geo=APAC&amp;amp;sc_outcome=acq&amp;amp;sc_detail=ec2%20free%20tier&amp;amp;sc_content={ad%20group}&amp;amp;sc_matchtype=e&amp;amp;sc_segment=489215168080&amp;amp;sc_medium=ACQ-P|PS-GO|Brand|Desktop|SU|Cloud%20Computing|EC2|KR|EN|Sitelink&amp;amp;s_kwcid=AL!4422!3!489215168080!e!!g!!ec2%20free%20tier&amp;amp;ef_id=Cj0KCQiA3Y-ABhCnARIsAKYDH7ssdyuTAUALOrZol8_ujQhh5xYy9GMFgpIZD3uGssn7iOp49h6L66EaAtjWEALw_wcB:G:s&amp;amp;s_kwcid=AL!4422!3!489215168080!e!!g!!ec2%20free%20tier&quot;&gt;가격 정책&lt;/a&gt;)만큼 무료 서비스를 제공한다.&lt;br /&gt;
나는 현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(1)&lt;/code&gt; 슬랙에 식단 봇을 매 오전 10시마다 cronlab 스케쥴러로 실행시키는 서버와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(2)&lt;/code&gt; 0주차 프로젝트의 웹서비스를 작동시킬 서버, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(3)&lt;/code&gt; 현재 mallocLab을 진행하는 서버 총 3개의 서버를 작동시키고 있다. 곧 청구서가 날라올 것만 같은 상태이다.&lt;/p&gt;

&lt;p&gt;나는 &lt;bold&gt;&quot;EC2 서버를 쓰지 않을 때는 종료하고 사용하고 싶을 때만 켜고 싶다&quot;&lt;/bold&gt; 라는 생각으로 Instance Scheduler를 찾아보았으나 나의 작업 시간이 무작위적이기 때문에 수동으로 직접 켜고 꺼주는 방법을 사용해야했다. &lt;strong&gt;콘솔의 GUI를 통해 직접 이를 구동하는 방법은 너무 비효율적이고 번거로웠다.&lt;/strong&gt; 😨 그 작은 오버헤드를 줄이고자 여기서는 AWS CLI를 이용하기로 했다.&lt;/p&gt;
&lt;h2 id=&quot;2-aws-cli-설치하기&quot;&gt;2. AWS CLI 설치하기&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AWS CLI&lt;/code&gt;는 말그대로 AWS가 제공하는 Commnad Line Interface이다. 우리가 터미널을 통해 AWS Console에서 제공하는 많은 기능들을 명령어로 사용할 수 있다는 의미이다.&lt;/p&gt;

&lt;p&gt;이 부분을 진행하기 이전에 OS 별로 설정이 필요로 할 것 같다. 나는 현재 Local의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows&lt;/code&gt; 에서 EC2 instance의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt; 를 &lt;bold&gt;&quot;실행&quot;&lt;/bold&gt;할 때와 EC2 instance의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt; 상에서 &lt;bold&gt;&quot;중지&quot;&lt;/bold&gt;를 하게 되기 때문에 이 절차를 따르기 위해 내 Local 과 EC2 instance 모두에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awscli&lt;/code&gt; 를 인스톨 하도록 한다. &lt;del&gt;버전이 두가지가 있지만 CLI2 를 받았다&lt;/del&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;windows env&lt;br /&gt;
&lt;br /&gt;&lt;a href=&quot;!https://awscli.amazonaws.com/AWSCLIV2.msi&quot;&gt;msi 파일&lt;/a&gt;을 다운받아 설치해분다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ubuntu env&lt;/p&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;awscli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;인스톨이 완료되면 CLI를 사용할 준비가 완료된다.😁&lt;/p&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 무언가 버젼번호가 출력되면 설치가 된 것이다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;이외의 환경은 다음 &lt;a href=&quot;!https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html&quot;&gt;링크&lt;/a&gt;를 참조하면 된다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-aws-iam-보안-자격-증명&quot;&gt;3. AWS IAM 보안 자격 증명!&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;CLI를 통해 접근하기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws IAM&lt;/code&gt;이란 것을 통해 보안 자격 증명을 하게 된다. AWS Management Console로 이동하여 다음의 흐름을 따라가자.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;AWS Management Console의 우측 상단의 이름을 클릭한다.&lt;/li&gt;
  &lt;li&gt;내 &lt;strong&gt;보안 자격 증명&lt;/strong&gt;을 선택한다.&lt;/li&gt;
  &lt;li&gt;이 중 &lt;strong&gt;“액세스 키”&lt;/strong&gt;를 선택한다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“새 액세스 키 만들기”&lt;/strong&gt;를 선택하고 *.csv 파일을 보관한다. (AccessKeyID와 SecretKey가 담겨있따.)&lt;/li&gt;
  &lt;li&gt;다음의 명령어를 입력한다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws configure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;요청하는 AccessKey, SecretKey, Region, Output Format을 할당해준다. (region은 서울, format은 json으로 했다.)&lt;br /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/26760693/104838130-45bdc680-58fc-11eb-8196-7cbad7601686.png&quot; alt=&quot;화면 캡처 2021-01-17 194121&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-ec2-시작중지하기&quot;&gt;4. EC2 시작/중지하기&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;우리가 평소 AWS의 GUI Console에서 하던 시작과 중지의 커맨드 입력은 다음과 같다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws ec2 start-instances &lt;span class=&quot;nt&quot;&gt;--instance-ids&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;instance-id&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 시작하기&lt;/span&gt;
aws ec2 stop-instances &lt;span class=&quot;nt&quot;&gt;--instance-ids&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;instance-id&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 중지하기&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이때, instance-id 를 보려고 또 콘솔을 봐야하는 수고를 줄여보자.&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AWS&lt;/code&gt;에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Elastic IP&lt;/code&gt;라는 것이 있다. &lt;del&gt;한글 Console에는 탄력적 IP라고 표현한다&lt;/del&gt;&lt;br /&gt;
AWS Management Console에서 좌측에 &lt;strong&gt;“탄력적 IP 주소 할당”&lt;/strong&gt;을 클릭한다. 이 후 간단하게 &lt;strong&gt;IP 주소 하나를 할당&lt;/strong&gt; 받을 수 있고, 이를 우리가 활용하고자 하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instance&lt;/code&gt;에 연결해주면 끝이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;이 후, 아래의 커맨드를 입력하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instance-id&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PublicKey&lt;/code&gt;등 정보를 얻을 수 있고 이를 활용하여 위 커맨드를 활용하면 된다.&lt;br /&gt;
추가로, 이 방법을 통해 매번 시작/중지 과정에서 publicIP 주소가 변하는 것을 막을 수 있다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws ec2 describe-addresses &lt;span class=&quot;nt&quot;&gt;--public-ips&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 내가 사용하는 Elastic IP 들이 나온다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-additional&quot;&gt;5. Additional&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-new-issue&quot;&gt;📌 New Issue&lt;/h3&gt;

&lt;p&gt;instance 가 중지되었다가 다시 실행되면 public IP가 변경이 되는데, 이에 맞게 config 되어있는 모든 것들에 대해 변경해야할 소요가 생긴다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;❓ 예를들면, 현재 VSC 상에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;simple-ftp&lt;/code&gt; extension으로 22번 포트를 통해 파일을 수정하고 있는데 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;simple-ftp&lt;/code&gt; configuration 파일에 있는 public IP 주소를 매번 수정해야 한다는 번거로움이 있다.&lt;br /&gt;
❗ 해결방안 :: (4.)의 Elastic IP 사용&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;6-epilogue&quot;&gt;6. Epilogue&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;🎉&lt;strong&gt;이제 CLI을 통해 EC2를 시작/중지할 수 있어, 콘솔을 다시 볼일이 없다!!🎉&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-reference&quot;&gt;7. Reference&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;AWS CLI Command Reference :: &lt;a href=&quot;!https://docs.aws.amazon.com/cli/latest/index.html&quot;&gt;amazon AWS&lt;/a&gt;&lt;br /&gt;
AWS S3 CLI - Could not connect to the endpoint URL :: &lt;a href=&quot;!https://stackoverflow.com/questions/40409683/aws-s3-cli-could-not-connect-to-the-endpoint-url&quot;&gt;StackOverFlow&lt;/a&gt;&lt;br /&gt;
Get public IP address via awscli :: &lt;a href=&quot;!https://serverfault.com/questions/971990/how-to-find-out-an-ec2-instances-private-and-public-ip-via-aws-cli&quot;&gt;StackExchange&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 17 Jan 2021 13:00:00 +0900</pubDate>
        <link>https://sunio00000.github.io//til/2021/01/17/til.html</link>
        <guid isPermaLink="true">https://sunio00000.github.io//til/2021/01/17/til.html</guid>
        
        <category>all</category>
        
        <category>aws</category>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>🔐 보안과 암호화, 기본 키워드</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;missing-semester 7일 차, Security and Cryptography&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;prologue&quot;&gt;Prologue&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;missing-semester의 강의를 다들어가는 시점에서 재미를 느끼며 들었던 강의가 되시겠다. 이름하야 보안과 암호화 평소에 신경도 안쓰던 데이터들과 이상 기이한 문자들의 의미를 조금이나마 이해해본 강의였다. 세상에 신기한 것들이 참 많다. 상식으로만 알아도 도움이 될 것 같다. &lt;bold&gt;강의에서는 보안과 암호학에 대해 학문적인 깊은 이해를 바탕으로 한 후에 실제 응용에 들어가라는 경고를 남긴다.&lt;/bold&gt; 그만큼 이 분야의 그것이 간단하지 않고 예민하게 설계되어 있다는 의미로 받아들이면 될 것 같다.&lt;br /&gt;
물론, 할 생각도 없었다.🙄&lt;br /&gt;
간단하게 강의 상 키워드 위주로 정보를 습득하고 정리해보자.&lt;/p&gt;

&lt;h2 id=&quot;엔트로피&quot;&gt;엔트로피&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;고등학교 필독서에서 설명하던 열역학의 그 엔트로피가 아니다. 정보학(informatics)에도 엔트로피라는 개념이 있는데, 이는 &lt;bold&gt;정보를 표현하는 하나의 단위&lt;/bold&gt;이다. 단위의 표현 방법은 우리에게 너무 익숙한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bit&lt;/code&gt;를 사용한다.&lt;/p&gt;

&lt;h2 id=&quot;hash&quot;&gt;Hash&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; #&lt;/code&gt;(해쉬태그), 어디선가 많이 들어본 단어이다. 맞다 그 Hash다.&lt;/p&gt;
&lt;h2 id=&quot;키-유도-함수-key-derivation-functions&quot;&gt;키 유도 함수 (Key derivation functions)&lt;/h2&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;대칭키-암호-symmetric-cryptography&quot;&gt;대칭키 암호 (Symmetric cryptography)&lt;/h2&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;비대칭-암호화-asymmetric-cryptography&quot;&gt;비대칭 암호화 (Asymmetric cryptography)&lt;/h2&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;참고링크&quot;&gt;참고링크&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;MIT(Missing-Semester) :: &lt;a href=&quot;!https://missing-semester-kr.github.io/2020/security/&quot;&gt;Security &amp;amp; Cryptography&lt;/a&gt;&lt;br /&gt;
NCSoft-danbi :: &lt;a href=&quot;!https://danbi-ncsoft.github.io/study/2018/12/06/entropy.html&quot;&gt;엔트로피와 의사결정나무&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Jan 2021 13:00:00 +0900</pubDate>
        <link>https://sunio00000.github.io//til/2021/01/15/til.html</link>
        <guid isPermaLink="true">https://sunio00000.github.io//til/2021/01/15/til.html</guid>
        
        <category>all</category>
        
        <category>missing</category>
        
        <category>informatics</category>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>📘 무엇이 나를 괴롭게 했을까.</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;앞으로의 다짐을 하며,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;푸념&quot;&gt;푸념&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;근래 정글 프로그램을 하며, 정말 수많은 생각과 감정, 그 위로 정보들이 머리를 스쳐가는 것 같다. 하루하루가 정말 보람차고, 내 삶에 있어서 정말 중요한 한 파트가 될 것 같다고 생각이 드는 즐거운 매일이다. 그만큼 많은 에너지를 쏟아내서 일까. 내 머릿 속은 정리되지 못한 것들로 가득하다.&lt;/p&gt;

&lt;p&gt;나는 무엇부터 어디서부터 잘 못했을까.&lt;br /&gt;
안풀리는 일이 있고 주변의 모든게 맘에 들지 않을 때, 수도 없이 이런 생각을 해왔던 것 같다. 하루에 12시간 이상을 모니터 앞에 앉아 다른 이들이 모여 이론이나 프로젝트에 열중하는 것을 보면, 내가 그들과 같이 그러지 못하는 이유에 대해 하루에 5번도 넘게 생각을 한다.&lt;/p&gt;

&lt;p&gt;근래에는 내 자신에게 너무나 화가 났다. 같은 목적을 가지고 함께 하는 정말 뛰어난 사람들을 보며, 내 부족함에 대해 아무것도 느끼지 못하고 있었다는 안일함 때문에 이불킥을 했다. 나는 항상 무언가 하고는 있었지만 목적을 위해 집요하게 집중하지는 않았다. 간절함 같은 것이 없었다. 그냥 그 시간을 지냈던 것 같다. 더 깊게 생각하고 노력하지 않았다.&lt;/p&gt;

&lt;p&gt;팀 프로젝트를 한참 진행하고 잠깐의 휴식 중에, 내가 팀원들에게 어느 부분에선가 책임을 전가하고 있다는 것을 느꼈다. 이들이 팀을 위해 무언가를 해낼 것이고, 나는 그에 따라 기뻐하기만 하면 되는 것마냥 무책임한 생각이 있었던 것 같다. 사실 프로젝트 활동 뿐 아니라, 이 교육의 커리큘럼을 그대로 따라가기만 하면 보증 수표가 될 것마냥 흐르는 대로 생각을 하는 내 모습도 이와 크게 다르지 않다.&lt;/p&gt;

&lt;p&gt;처음 이 곳에 왔을 때 가졌던 다짐 같은 것들이 지금의 나에게서 보이지가 않는다.&lt;br /&gt;
내가 최선을 다하지 못했다는 사실을 알고 보란듯이 내 머리를 치는 결과물들은 점점 쌓여만 가고있고, 어느덧 1달하고 보름이 지난 이 시점에 나는 내가 어느 지점에 있는지 느껴가고 있다. 지금 처럼은 안될 것 같다.&lt;br /&gt;
조금 더 시간이 흘러 선명해질 내 위치가 지금의 위치는 아니였으면 좋겠다.&lt;br /&gt;
적어도, 내 스스로를 화나게 하는 행동을 하지 않았으면 좋겠다.&lt;/p&gt;

&lt;h5 id=&quot;이런-고민-하는-것도-너무-고깝다&quot;&gt;이런 고민 하는 것도 너무 고깝다.&lt;/h5&gt;

</description>
        <pubDate>Thu, 14 Jan 2021 13:26:28 +0900</pubDate>
        <link>https://sunio00000.github.io//daily/2021/01/14/daily.html</link>
        <guid isPermaLink="true">https://sunio00000.github.io//daily/2021/01/14/daily.html</guid>
        
        <category>all</category>
        
        <category>daily</category>
        
        
        <category>daily</category>
        
      </item>
    
      <item>
        <title>🌋 VIM 을 이용하여 XML to JSON Parsing</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;missing-semester 3일 차, Practice 8번&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;OS : Windows10&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VIM&lt;/code&gt; / &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WSL&lt;/code&gt; / &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LINUX&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-prologue&quot;&gt;1. Prologue&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vim&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Linux&lt;/code&gt;의 대표적인 편집기인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi&lt;/code&gt;와 호환되는 텍스트 편집기이다.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vim&lt;/code&gt;의 여러가지 모드를 통해 파일에 접근하고 이를 추가/수정/제거할 수 있다.&lt;br /&gt;
사실 아직 나에게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vim&lt;/code&gt;은 input을 키보드로만 받는 무식한 메모장일 뿐이다.&lt;br /&gt;
좀 더 친해져보도록 노력해보자.&lt;br /&gt;
왜 쓰는거야 근데..&lt;/p&gt;

&lt;h2 id=&quot;2-issue&quot;&gt;2. Issue&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;여기 example-data.xml이 있다.&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;people&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;person&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Johnny Zhang Jr.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;email&amp;gt;&lt;/span&gt;amyalvarez@cole.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/email&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;person&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Edward Cook&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;email&amp;gt;&lt;/span&gt;dsparks@alvarez-dunn.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/email&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;person&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Stephen Sweeney&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;email&amp;gt;&lt;/span&gt;dlewis@gmail.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/email&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;person&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Krystal Riley&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;email&amp;gt;&lt;/span&gt;jflores@wright.biz&lt;span class=&quot;nt&quot;&gt;&amp;lt;/email&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/people&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h6 id=&quot;실제로는-1000줄에-해당하는-파일이지만-그-중-일부만-잘라-실습하도록-하자&quot;&gt;&lt;em&gt;(실제로는 1000줄에 해당하는 파일이지만 그 중 일부만 잘라 실습하도록 하자.)&lt;/em&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XML&lt;/code&gt;은 markup language로서 ‘태그’ 내에 인라인으로 정보나 데이터를 표현하는 요소(element)를 가지고 있다.&lt;br /&gt;
위 예제에서의 element는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;people&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;person&lt;/code&gt; &amp;gt;  {&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;email&lt;/code&gt;} 로 구성되어 있다고 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt;은 JavaScript Object Notation의 약자로서 데이터를 좀 더 쉽게 교환하고 저장하기 위해 만들어진 텍스트 기반의 _‘형식’_의 하나라고 알면 될 것 같다.&lt;br /&gt;
참고로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XML&lt;/code&gt;은 EXtensible Markup Language의 약자이다. (link :: &lt;a href=&quot;!http://www.tcpschool.com/json/json_intro_xml&quot;&gt;두 사이의 공통점과 차이점&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;아무튼, 우리는 이 둘간의 변환을 해야한다. 구조의 대한 자세한 설명은 6.Reference 의 링크를 참조하도록 하고, 이제 문제를 해결해보자.&lt;/p&gt;

&lt;h2 id=&quot;3-resolve&quot;&gt;3. Resolve&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;글쓰는 본인도 위 내용을 잘 모르기 때문에, 코드를 보고 하나씩 해석하는 과정을 거치며, 설명을 하도록 해야겠다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;일단 Vim으로 example-data.xml을 열어보자.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;people&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;person&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Johnny Zhang Jr.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;email&amp;gt;&lt;/span&gt;amyalvarez@cole.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/email&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/person&amp;gt;&lt;/span&gt;
  ...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/people&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;우리는 이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sed&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Regex&lt;/code&gt;를 사용할 것이다. 텍스트를 분해하거나 변환하기 위한 프로그램(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sed&lt;/code&gt;)의 특정한 규칙을 가진 문자열의 집합을 표현하는 방법(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Regex&lt;/code&gt;, 정규표현식은 여러 language에서 지원한다)으로 세한 내용은 너무나 많아 생략한다. 🙃&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/people/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;d&lt;/span&gt; 
 &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; %s&lt;span class=&quot;sr&quot;&gt;/&amp;lt;person&amp;gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt; 
 &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; %s&lt;span class=&quot;sr&quot;&gt;/&amp;lt;\/person&amp;gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt; 
 &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; %s&lt;span class=&quot;sr&quot;&gt;/&amp;lt;name&amp;gt;\(.*\)&amp;lt;\/name&amp;gt;/&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;\1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt; 
 &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; %s&lt;span class=&quot;sr&quot;&gt;/&amp;lt;email&amp;gt;\(.*\)&amp;lt;\/email&amp;gt;/&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;\1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;커맨드 입력 모드에서 위의 커맨드를 순서대로 입력해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;: g/people/d&lt;/code&gt; 커맨드는 모든 라인에 적용하여(g) “people” 을 찾고 line delete(d) 한다.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;: %s/&amp;lt;person&amp;gt;/{/g&lt;/code&gt; 커맨드는 모든 라인의 ‘&lt;person&gt;'을 '{'로 변경한다.&lt;/person&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;: %s/&amp;lt;\/person&amp;gt;/},/g&lt;/code&gt; 위 커맨드와 같고, 역슬래쉬(‘')를 사용하는 이유는 슬래쉬(‘/’)를 문자로 받기 위함인 것 같다. 그리고 추가로 브라켓 구분을 위한 delimeter ‘,’도 추가해주자.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;: %s/&amp;lt;name&amp;gt;\(.*\)&amp;lt;\/name&amp;gt;/&quot;name&quot;:&quot;\1&quot;,/g&lt;/code&gt; 커맨드는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;name&amp;gt;*&amp;lt;/name&amp;gt;&lt;/code&gt; 을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;name&quot; : &quot;*&quot;&lt;/code&gt; 로 변경해준다. (\1 은 첫번째 backreference를 의미한다.)&lt;/p&gt;

&lt;p&gt;이 후, manually 하게 마지막 쉼표(,)를 제거하고, 대괄호(‘[’,’]’)를 앞뒤로 추가하면 끝난다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[
  {
    &quot;name&quot;: 'Johnny Zhang Jr.',
    &quot;email&quot;: 'amyalvarez@cole.com'
  },
  {
    &quot;name&quot;: 'Edward Cook',
    &quot;email&quot;: 'dsparks@alvarez-dunn.com'
  },
  {
    &quot;name&quot;: 'Stephen Sweeney',
    &quot;email&quot;: 'dlewis@gmail.com'
  },
  {
    &quot;name&quot;: 'Krystal Riley',
    &quot;email&quot;: 'jflores@wright.biz'
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;JSON 형식으로 완성되었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-code&quot;&gt;4. Code&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;Resolve 참고&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-post-script&quot;&gt;5. Post Script&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;vim에 대해 이해하는 단계인데 어째 regex에 대해서 더 공부를 하게 된 것 같다는 생각이 든다.
언젠가 주력으로 vim을 쓰게 된다면 오늘 배운걸 다시 써먹을 날이 오겠지… 상상..🤒&lt;/p&gt;

&lt;h2 id=&quot;6-reference&quot;&gt;6. Reference&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;missing-semester :: &lt;a href=&quot;!https://missing-semester-kr.github.io/2020/editors/&quot;&gt;Lecture 3. VIM editor&lt;/a&gt;&lt;br /&gt;
XML이 뭐야? :: &lt;a href=&quot;!http://www.tcpschool.com/xml/xml_basic_structure&quot;&gt;XML 구조&lt;/a&gt;&lt;br /&gt;
JSON이 뭐야? :: &lt;a href=&quot;!http://www.tcpschool.com/json/intro&quot;&gt;JSON&lt;/a&gt;&lt;br /&gt;
Sed / Regex :: &lt;a href=&quot;!https://www.gnu.org/software/sed/manual/html_node/Common-Commands.html#Common-Commands&quot;&gt;Sed_manual&lt;/a&gt;&lt;br /&gt;
VIM Basic search and replace :: &lt;a href=&quot;!https://vim.fandom.com/wiki/Search_and_replacei&quot;&gt;vim_tip_wiki&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Jan 2021 13:00:00 +0900</pubDate>
        <link>https://sunio00000.github.io//til/2021/01/04/til.html</link>
        <guid isPermaLink="true">https://sunio00000.github.io//til/2021/01/04/til.html</guid>
        
        <category>all</category>
        
        <category>missing</category>
        
        <category>til</category>
        
        <category>vim</category>
        
        <category>json</category>
        
        <category>xml</category>
        
        <category>regex</category>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>👨🏻‍💻 Git 커밋 Template 아름답게 전달하자</title>
        <description>&lt;p&gt;깃을 통해 정보와 프로젝트, 제대로 공유하는 방법&lt;/p&gt;

&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-prologue&quot;&gt;1. Prologue&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;우리는 서로를 이해시키는 무한한 소통의 과정을 거치며, 그 과정에 따라 웃으며 술 한잔 할 수 있는 팀워크인지 폭망해 카톡 숨김 목록을 차지하는 팀워크를 만나게 된다.&lt;br /&gt;
코드를 Clean 하게 작성하는 것 이외로 우리는 개발을 하면서 협업을 하고 여러 의사결정을 하게 된다.  &lt;br /&gt;
도구는 손짓 발짓이 될 수도 있고, 코드 그 자체가 되기도 한다. (뭐 이외에도 굉장하고 무궁무진한 방법들이 많긴하다. 🙄)&lt;br /&gt;
우리는 효율적인 의사소통 도구의 활용이 우리에게 당연히도 최대의 이득을 가져다 줄 것이라 생각한다.&lt;br /&gt;
하지만, 게을러서 포기하는 어떠한 (수많은) 것들이 있다..&lt;br /&gt;
그 중에 버전관리 프로그램을 사용하며 작성하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Commit message&lt;/code&gt;를 이쁘고 명료하게 작성해보자.&lt;/p&gt;

&lt;h2 id=&quot;2-issue&quot;&gt;2. Issue&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;내가 무엇을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Commit&lt;/code&gt; 했었는지, 전혀 알 수가 없다. 이건 똥이다.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/26760693/103532788-363b8800-4ecf-11eb-8429-f39a62c129e8.png&quot; width=&quot;700&quot; height=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-resolve&quot;&gt;3. Resolve&lt;/h2&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;Commit template이 될 작성 파일을 생성한다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# windows powershell&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ni ~/.gitmessage.txt
&lt;span class=&quot;c&quot;&gt;# linux shell&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; ~/.gitmessage.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;에디터를 통해 파일에 접근하여 팀이 정한 템플릿(&lt;strong&gt;[목차 4] Code&lt;/strong&gt; 참고)을 그대로 넣고 저장한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit.template&lt;/code&gt;에 이 파일을 적용해준다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; commit.template ~/.gitmessage.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;이 후의 깃 커밋 시에는 git commit (옵션 없이)를 치면 아래와 같은 화면이 나온다&lt;/li&gt;
  &lt;li&gt;제목/본문/꼬릿말로 구성된 내용을 수정하고 커밋한다&lt;/li&gt;
&lt;/ol&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/26760693/103534155-b531c000-4ed1-11eb-8d29-1e2c0df910e0.png&quot; width=&quot;650&quot; height=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-code&quot;&gt;4. Code&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;템플릿 예제.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# &amp;lt;타입&amp;gt;: &amp;lt;제목&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;##### 제목은 최대 50 글자까지만 입력 ############## -&amp;gt; |&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# 본문은 위에 작성&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;######## 본문은 한 줄에 최대 72 글자까지만 입력 ########################### -&amp;gt; |&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 꼬릿말은 아래에 작성: ex) #이슈 번호&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# --- COMMIT END ---&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# &amp;lt;타입&amp;gt; 리스트&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#   feat    : 기능 (새로운 기능)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#   fix     : 버그 (버그 수정)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#   refactor: 리팩토링&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#   style   : 스타일 (코드 형식, 세미콜론 추가: 비즈니스 로직에 변경 없음)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#   docs    : 문서 (문서 추가, 수정, 삭제)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#   test    : 테스트 (테스트 코드 추가, 수정, 삭제: 비즈니스 로직에 변경 없음)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#   chore   : 기타 변경사항 (빌드 스크립트 수정 등)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ------------------&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#     제목 첫 글자를 대문자로&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#     제목은 명령문으로&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#     제목 끝에 마침표(.) 금지&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#     제목과 본문을 한 줄 띄워 분리하기&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#     본문은 &quot;어떻게&quot; 보다 &quot;무엇을&quot;, &quot;왜&quot;를 설명한다.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#     본문에 여러줄의 메시지를 작성할 땐 &quot;-&quot;로 구분&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ------------------&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;5-post-script&quot;&gt;5. Post Script&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;일의 마무리를 보람차게 매듭짓도록 커밋메시지를 작성해보자.&lt;/p&gt;
&lt;h2 id=&quot;6-reference&quot;&gt;6. Reference&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Git Documentation 中 :: &lt;a href=&quot;!https://git-scm.com/book/ko/v2/Git%EB%A7%9E%EC%B6%A4-Git-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0&quot;&gt;8.1 Git맞춤-git-설정하기&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Jan 2021 13:00:00 +0900</pubDate>
        <link>https://sunio00000.github.io//til/2021/01/04/TIL_template.html</link>
        <guid isPermaLink="true">https://sunio00000.github.io//til/2021/01/04/TIL_template.html</guid>
        
        <category>all</category>
        
        <category>til</category>
        
        <category>git</category>
        
        <category>mistake</category>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>💻 Git Blog를 Local Host에서 미리 보기</title>
        <description>&lt;blockquote&gt;
  &lt;h5 id=&quot;내가-왜-git으로-블로그를-시작한걸까&quot;&gt;&lt;del&gt;내가 왜 git으로 블로그를 시작한걸까…&lt;/del&gt;&lt;/h5&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;tools&quot;&gt;Tools&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Github&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ruby&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Markdown&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bootstrap&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-prologue&quot;&gt;1. Prologue&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Github 블로그를 시작하기로 해버린 이상 하긴 해야하는데, 정말 하나부터 열까지 직접 구현을 해야한다.&lt;br /&gt;
우습게도 정적 페이지로 깃 서버에서 돌아가기 때문에, 여느 블로그에나 있는 좋아요, 댓글과 같은 기능을 직접 구현할 수는 없어 여러 툴을 활용해야 한다. (최근, disqus를 통해서 댓글 기능을 추가하였다.)&lt;br /&gt;
이러한 이유로 수정할 일도 많고 테스트 해보는 경우도 매우 잦은 블로그 시스템인데 문제는 내가 이걸 무식하게 글자하나 맘에 안들면 커밋하고, 폰트가 볼드체여서 커밋하고, 이미지 사이즈 바꾼다고 커밋을 하고 있다.&lt;br /&gt;
그 덕에 깃허브의 잔디는 나에겐 발갛게 달아오른 얼굴 같은 것이 되었다. 😂&lt;br /&gt;
(깃허브 블로그 시작하지마.. 아무튼 하지마…😐)&lt;/p&gt;
&lt;h2 id=&quot;2-issue&quot;&gt;2. Issue&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;깃허브 블로그는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Github&lt;/code&gt;에서 제공하는 서버 위에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;의 텍스트 변환 엔진을 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTML&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;markdown&lt;/code&gt; Language를 미리 정의된 레이아웃에 따라서 표현하는 정적 웹사이트이다. 그 만큼 손이 많이 가기 때문에 이 것을 로컬 호스트에서 추가/변경 작업을 하고 싶다.&lt;/p&gt;

&lt;p&gt;나의 목표는 &lt;strong&gt;포스팅 작성 내용을 localhost에서 확인하고 수정해서 불필요한 커밋을 줄여보는 것이다.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-resolve&quot;&gt;3. Resolve&lt;/h2&gt;
&lt;hr /&gt;
&lt;ol&gt;
  &lt;li&gt;일단, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ruby&lt;/code&gt;를 다운 받아야 한다. &lt;a href=&quot;https://www.ruby-lang.org/ko/downloads/&quot;&gt;&lt;em&gt;Download&lt;/em&gt;&lt;/a&gt; 링크에서 자신의 운영체제에 맞는 프로그램을 설치한다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ruby&lt;/code&gt;로 만들어져 있기에 다운을 받아야 한다고 한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt; 외 몇 가지의 패키지를 설치해야한다.
    &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minima&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tzinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;을 실행한다. (이전에 jekyll이 포함된 repo를 클론하여야 하는 것을 잊지말자.)
    &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#만약, 인코딩 에러가 발생하면,&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chcp&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65001&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#입력하고 다시 지킬을 실행한다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:4000&lt;/code&gt;으로 접속하면 로컬의 jekyll 블로그가 웹에 출력된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;만약 이런 아래와 같은 오류가 뜬다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;이 원
하시는 모습으로 변경 해드려야 한다. (버전 번호를 변경해보자.)&lt;/li&gt;
&lt;/ol&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/26760693/103355846-b12d2900-4af2-11eb-9297-a8cc7f24bdeb.png&quot; width=&quot;500&quot; height=&quot;130&quot; /&gt; &lt;/p&gt;

&lt;h2 id=&quot;4-code&quot;&gt;4. Code&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;없음 -&lt;/p&gt;
&lt;h2 id=&quot;5-post-script&quot;&gt;5. Post Script&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;del&gt;포스팅 한번 하기 더럽게 힘드네 진짜&lt;/del&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Dec 2020 13:00:00 +0900</pubDate>
        <link>https://sunio00000.github.io//til/2020/12/30/TIL_template.html</link>
        <guid isPermaLink="true">https://sunio00000.github.io//til/2020/12/30/TIL_template.html</guid>
        
        <category>all</category>
        
        <category>til</category>
        
        <category>git</category>
        
        <category>jekyll</category>
        
        <category>ruby</category>
        
        <category>blog</category>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>🎲 SW JUNGLE, 급하게 돌아보기</title>
        <description>&lt;h2 id=&quot;loc-정글-stat-정신-나가는-중&quot;&gt;{‘loc’: ‘정글’, ‘stat’: ‘정신 나가는 중..’}&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;찬찬히 나를 돌아보라고 하시지만, 그럴 여유 없다. 급하게 돌아보자&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/26760693/102010727-54581180-3d83-11eb-940b-d5adcddee797.gif&quot; width=&quot;400&quot; height=&quot;300&quot; /&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;나라는-사람은&quot;&gt;&lt;b&gt;나라는 사람은…&lt;/b&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;방황의-시간들&quot;&gt;방황의 시간들&lt;/h2&gt;

&lt;p&gt;일단, 나는 1달이 지나면 앞자리가 ‘3’으로 바뀌는 아저씨이다.&lt;br /&gt;어쩌다보니 시간이 흘러서 그렇게 되버렸다. (내 잘못은 아닌듯 함) 🙂 &lt;br /&gt;시간을 돌이켜보면 미래에 대해 고민한건 대학을 졸업한 시점부터 였던 것 같다. &lt;del&gt;이런 병x이 없다.&lt;/del&gt;&lt;br /&gt; 적성에 맞는다는 생각에 &lt;b&gt;사람을 가르치는 직업&lt;/b&gt;을 시작으로 서울대 수의과의 Lab실에서 1년 넘게 &lt;b&gt;어플리케이션을 개발&lt;/b&gt;하며 사회생활을 경험해왔다.&lt;br /&gt;뭐 어느 Lab실이 그렇듯, 당연히도 개발만 하지는 못했다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h5 id=&quot;이러쿵-저러쿵해서-지금은-정글을-만나게-되었다&quot;&gt;&lt;center&gt;🎉이러쿵 저러쿵해서 지금은 정글을 만나게 되었다.🎉&lt;/center&gt;&lt;/h5&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;정글에-오고자-한-목적&quot;&gt;정글에 오고자 한 목적&lt;/h2&gt;
&lt;p&gt;나는 개발은 해봤지만, 개발자는 아니였다.&lt;br /&gt;누군가가 나에게 이런 말을 해준적이 있었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;돈이 없어도 살 수 있지만, 비굴해질 일이 생긴다.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;물론 돈 이야기는 아니다.&lt;br /&gt;이전 직장에서 겉핥기 식으로 개발을 하며 깨달은 것은 능력도 없이 창피하게 ‘개발자’라는 타이틀로 일을 했다는 것이다. &lt;br /&gt;그렇기 때문에, 개발보다 다른 연구과제를 더 많이 하게 되어도 자존심이 안상했고,&lt;br /&gt; 만약 내가 개발이 하고 싶으면 ‘할 줄도 모른다’는 비아냥을 받으며 빌어야하는 위치였다.&lt;br /&gt;나이가 들어 돈이 없는 사람처럼 말이다.&lt;br /&gt; 여기서 그 &lt;b&gt;‘비굴함’&lt;/b&gt;이 없는 개발자가 될 기회를 얻은 것 같아 정말 기쁘고 영광스럽게 생각한다 😌&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;week00-에서-느낀-것들&quot;&gt;&lt;b&gt;WEEK00 에서 느낀 것들&lt;/b&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;함께-개발한다는-것&quot;&gt;함께 개발한다는 것&lt;/h2&gt;

&lt;p&gt;0주차는 해커톤마냥 웹프로젝트를 팀으로 하는것이였다.&lt;br /&gt;대부분이 비전공자이고 개발에 깊은 조예가 없었기 때문에 다짜고짜 팀프로젝트는 당황의 연속이였다.&lt;br /&gt;‘웹 개발이라고는 입교시험 때 배운게 전분데 뭘 어떻게 하라는거지?’ 우리는 혼란에 휩싸였다.&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;저 Pull Request 처음 해봐요… fork는 뭐에요…😂&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align=&quot;center&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/26760693/102012066-a6049a00-3d8b-11eb-86c2-56f06e1ec3b1.png&quot; width=&quot;700&quot; height=&quot;300&quot; /&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;&quot; alt=&quot;pull&quot; /&gt;
&lt;em&gt;31 Closed pull request..&lt;/em&gt;
첫날 몇 시간동안 짧게 배운 github를 이용해서 협업하는 방법에 대해 고민하고, 바로 실전에 적용해서 프로젝트를 제작하였다.&lt;br /&gt;포크한 개인 레포에서 생성한 기관 레포에 풀리퀘를 보내고 머지하고 컨플릭트에러 나고, 다시 푸쉬하고 풀리퀘하…&lt;br /&gt;그렇게 3박 4일을 어제 처음만난 팀원들과 함께 처음보는 프레임워크와 개발언어, 협업툴을 이용하는 과정을 거쳐, 우리가 개발한 웹이 서버에서 돌아가는 모습을 보니 너무 뿌듯했다.&lt;br /&gt;동시에, 세상에 그렇게 많은 웹페이지들이 어떻게 돌아가는건지 경외감을 느끼며 0주차가 지나갔다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;힘들겠다-아니-이미-힘들어-쉴틈없이-이어지는-week01&quot;&gt;힘들겠다… 아니 이미 힘들어. 쉴틈없이 이어지는 WEEK01.&lt;/h2&gt;
&lt;p&gt;1단, 1주차 커리큘럼을 본 모두는 그렇게 생각했다… ‘ 오, 쉽네 ‘&lt;br /&gt;아니다 겁나 어렵다. 큰일이 나버린 것이다. &lt;br /&gt;생각처럼 되지가 않는다. 이상은 사이드프로젝트인데, 현실은 재귀함수다. &lt;br /&gt;이번 주차가 제일 쉽다는데 우린 &lt;del&gt;x됐다.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;정글의-끝에-뭐가-있을까&quot;&gt;&lt;b&gt;정글의 끝에 뭐가 있을까&lt;/b&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;자부심-넘치는-개발자-&quot;&gt;자부심 넘치는 개발자 👨‍💻&lt;/h2&gt;
&lt;p&gt;개발 근육이 튼튼한 개발자가 되어 있기를 바라고,&lt;br /&gt;내가 모르는 것이 무엇인지 알고, 필요한 것을 스스로 찾는 지혜로운 개발자,&lt;br /&gt; 나를 필요로 하는 곳에서, 그들을 만족 시킬 수 있는 기술과 능력을 가진 기술자가 되어 정글에서 당당하게 졸업하여 나가게 될거야.
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;제가-해보고-싶어요-️&quot;&gt;제가 해보고 싶어요 🙋‍♂️&lt;/h2&gt;
&lt;p&gt;꼭 필요한 담백한 질문을 하는 사람,&lt;br /&gt;문제를 해결하는데 가장 먼저 앞서서 나서는 사람,&lt;br /&gt;오지랖 넘치는 지식 자랑보다 헤쳐나가는 지혜를 가르쳐줄 수 있는 사람&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;다짐-&quot;&gt;&lt;b&gt;다짐 😏&lt;/b&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;b&gt;  1. 일단 하기&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;무엇이든 살이되고 뼈가된다는 믿음을 가지고&lt;/p&gt;

&lt;p&gt;&lt;b&gt;  2. 자부심 가지기&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;나라고 못할게 뭐가 있냐.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;  3. 이타적 이기심 갖기&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;내가 잘되야 내 주변이 잘된다.
&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 14 Dec 2020 06:14:00 +0900</pubDate>
        <link>https://sunio00000.github.io//daily,/essay/2020/12/14/jungleessay.html</link>
        <guid isPermaLink="true">https://sunio00000.github.io//daily,/essay/2020/12/14/jungleessay.html</guid>
        
        <category>all</category>
        
        <category>daily</category>
        
        
        <category>daily,</category>
        
        <category>essay</category>
        
      </item>
    
      <item>
        <title>📘 개발? 새발 블로그 만들었다!</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;글을 겁나 못쓰는 사람의 개발 일지.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;개발, 생각, 일상의 내용을 기록하는 창구로 사용하게 될 것 같다.&lt;/p&gt;

&lt;p&gt;해야지 해야지 했는데 이제야 하게되었구나 싶다.&lt;/p&gt;

&lt;p&gt;오늘 이후로 주기적인 TIL을 기록하게 될 것 같다.&lt;/p&gt;

&lt;p&gt;내용은 일반적인 개발 블로그들과 다르게 접근하고 싶다.&lt;br /&gt;
고리타분하고 3초 들러 지나갈 블로그가 아니고 싶기 때문이다.&lt;br /&gt;
(근데 벌써 고리타분한 것 같다..)&lt;/p&gt;

&lt;p&gt;아무튼, 많은 것들이 시작되었고, 또다른 험난한 여정이 시작될 것 같다.&lt;br /&gt;
나에게 있어 이 좋은 기회를 나의 삶의 한 자랑거리가 될 수 있도록 열심히 해보자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Hello My Coding Life!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;fin.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Dec 2020 21:26:28 +0900</pubDate>
        <link>https://sunio00000.github.io//daily/2020/12/09/daily.html</link>
        <guid isPermaLink="true">https://sunio00000.github.io//daily/2020/12/09/daily.html</guid>
        
        <category>all</category>
        
        <category>daily</category>
        
        
        <category>daily</category>
        
      </item>
    
  </channel>
</rss>